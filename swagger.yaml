openapi: "3.0.0"

info:
  title: PDeets app poc api
  description: This documentation contains information regarding the available endpoints for poc app of planspiel project.
  version: 1.0.0

servers:
  - url: http://18.184.191.74/
    variables:
      port:
        enum:
          - "80"
        default: "80"
    description: Development server API endpoint
  # - url: https://agile-plains-29279.herokuapp.com/
  #   description: Production API endpoint


# reuseable components
components:
  securitySchemes:
    basicAuth: 
      type: http
      scheme: basic

  responses:
    UnknownServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error: 
                type: string
    Unauhtorized:
      description: Unauthorized request
      content:
        application/json:
          schema:
            type: object
            properties:
              error: 
                type: string


paths:
  # api doc endpoint
  /api-docs:
    get:
      tags:
        - Documentation
      summary: Route on which swagger documentation is served
      responses:
        '200':
          description: OK

  # patient registration endpoint
  /patient/register:
    post:
      tags:
        - Patient
      summary: Allows patient registration
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName: 
                  type: string
                  required: true
                lastName:
                  type: string
                  required: true
                email:
                  type: string
                phoneNumber:
                  type: string
                  required: true
                gender:
                  type: string
                  description: 'male, female, other'
                dateOfBirth:
                  type: 'string'
                  description: 'Date with timezone. i.e 1994-11-05T08:15:30-05:00'
                password:
                  type: 'string'
                  required: true
      responses:
        '201':
          description: Patient registration successful. Will return newly registed patient.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      tokens:
                        type: object
                        nullable: true
  
                      patient:
                        type: object
                        properties:
                          id:
                            type: string
                          fist_name:
                            type: string
                          last_name:
                            type: string
                          email:
                            type: string
                          phone_number:
                            type: string
                          gender:
                            type: string
                          date_of_birth:
                            type: string
                          last_login:
                            type: string
                          updatedAt:
                            type: string
                          createdAt:
                            type: string

        '400':
          description: JSON payload validation error | Unqiue phone number error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server


        '500':
          $ref: '#/components/responses/UnknownServerError' 
  
  # patient login endpoint
  /patient/login:
    post:
      tags:
        - Patient
      summary: Allows patient to login
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                  description: email or phoneNumber, supply one of them
                  required: true
                phoneNumber:
                  type: string
                  description: email or phoneNumber, supply one of them
                  required: true
                password:
                  type: string
                  required: true
                deviceToken: string
      responses:
        '200':
          description: Patient login successful. Will return access and refresh tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      tokens:
                        type: object
                        properties:
                          accessToken:
                            type: string
                          refreshToken:
                            type: string
                      patient:
                        type: object
                        properties:
                          id:
                            type: string
                          fist_name:
                            type: string
                          last_name:
                            type: string
                          email:
                            type: string
                          phone_number:
                            type: string
                          gender:
                            type: string
                          date_of_birth:
                            type: string
                          last_login:
                            type: string
                          updatedAt:
                            type: string
                          createdAt:
                            type: string
        '401':
          description: Invalid username or password.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server


        '500':
          $ref: '#/components/responses/UnknownServerError' 
  
  # token refresh endpoint
  /patient/token/refresh:
    post:
      tags:
        - Patient
      summary: Allows patient tokens to be refreshed (will issue new pair of access and refresh tokens on access token expiration)
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the refresh token
          required: true

      responses:
        '200':
          description: Token refreshed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      tokens:
                        type: object
                        properties:
                          accessToken:
                            type: string
                          refreshToken:
                            type: string
        '401':
          description: JWT token realted errors : invalid token, Token expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '500':
          $ref: '#/components/responses/UnknownServerError'

  # password reset token endpoint
  /patient/token/password_reset:
    post:
      tags:
        - Patient
      summary: Will issue a jwt token and send an email to the user with reset code. pass the reset token in authorization header while resetting the password.
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                  description: email or phoneNumber, supply one of them (working)
                  required: true
                phoneNumber:
                  type: string
                  description: email or phoneNumber, supply one of them (not implimented)
                  required: true

      responses:
        '200':
          description: Password reset token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      resetToken:
                        type: string

        '400':
          description: JSON payload validation error - invalid email or phoneNumber
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '500':
          $ref: '#/components/responses/UnknownServerError'

  # change & reset password endpoint
  /patient/password:
    post:
      tags:
        - Patient
      summary: Will allow to change and reset the password.
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: when action is set to change_password - (token represents current login session) and when action is set to reset_password - (supply reset token)
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                action: 
                  type: string
                  description: supply "change_password" or "reset_password"
                  required: true
                email:
                  type: string
                  description: email or phoneNumber, supply one of them
                  required: true
                phoneNumber:
                  type: string
                  description: email or phoneNumber, supply one of them
                  required: true
                oldPassword:
                  type: string
                  description: reqired while action is set to "change_password"
                  require: true
                newPassword:
                  type: string
                  description: reqired while action is set to "change_password" and "reset_password"
                  require: true
                validationCode:
                  type: string
                  description: reqired while action is set to "reset_password"
                  require: true

      responses:
        '200':
          description: Successful password change | Successful password reset.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object

        '400':
          description: JSON payload validation error - missing required params (see schema)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '500':
          $ref: '#/components/responses/UnknownServerError'

  # appointment location listing
  /appointment/locations:
    post:
      tags:
        - Appointment
      summary: Allows fetching of available locations
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                filterBy: 
                  type: string
                  description: This is a gloabl filter. Pass the user input and search will be performed on location name, description, address, pincode and city columns
  
      responses:
        '200':
          description: List of locations
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      locations:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            lan:
                              type: string
                            lon:
                              type: string
                            address:
                              type: string
                            pincode:
                              type: string
                            city:
                              type: string
                            createdAt:
                              type: string
                            updatedAt:
                              type: string
                          

        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 

  # appointment department listing
  /appointment/departments:
    post:
      tags:
        - Appointment
      summary: Allows fetching of available departments
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
                  required: true
                filterBy: 
                  type: string
                  description: This is a gloabl filter. Pass the user input and search will be performed on department name and description
  
      responses:
        '200':
          description: List of departments
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      departments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string

        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 

  # appointment doctor listing
  /appointment/doctors:
    post:
      tags:
        - Appointment
      summary: Allows fetching of available doctors
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
                  required: true,
                departmentId:
                  type: string
                  required: true
                filterBy: 
                  type: string
                  description: This is a gloabl filter. Pass the user input and search will be performed on doctor proerties.
  
      responses:
        '200':
          description: List of doctors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      doctors:
                        type: array
                        items:
                          type: object
                          properties:
                            doctor_id:
                              type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
                            email:
                              type: string
                            phone_number:
                              type: string
                            education:
                              type: string
                            about:
                              type: string
                            address:
                              type: string
                            pincode:
                              type: string
                            doctor_speciality:
                              type: string
                            licence_no:
                              type: string
                            experience:
                              type: string
                            avg_review:
                              type: number
                            reviews:
                             type: array
                             items:
                              properties:
                               first_name:
                                type: string
                               last_name:
                                type: string
                               number_of_stars:
                                type: string
                               review_text:
                                type: string
                            

        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 

  # appointment doctor schedule listing
  /appointment/doctor/availability:
    post:
      tags:
        - Appointment
      summary: Allows fetching of doctor schedule
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                    type: string
                    required: true,
                departmentId:
                  type: string
                  required: true,      
                doctorId:
                  type: string
                  required: true,
      responses:
        '200':
          description: List of doctor schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      schedule:
                        type: object
                        properties:
                          id:
                            type: string
                          doctor_id:
                            type: string
                          start_time:
                            type: string
                          end_time:
                            type: string
                          appointment_duration:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                      bookedSlots:
                        type: array
                        items:
                          properties:
                            date:
                              type: string
                            time:
                              type: string
                            duration:
                              type: string

        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server

        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 

  # appointment questionary
  /appointment/questionnaire:
    post:
      tags:
        - Appointment
      summary: Allows fetching of questionnaire
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      
      responses:
        '200':
          description: List of questionnaire with option
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      questionnaire:
                        type: array
                        items:
                          type: object
                          properties:
                            question:
                              type: string
                            question_options:
                              type: array
                              items:
                                type: object
                                properties:
                                  option:
                                    type: string

        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 

  # appointment booking and listing 
  /appointment:
    post:
      tags:
        - Appointment
      summary: Allows booking of an appointment
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
                  required: true
                departmentId:
                  type: string
                  required: true
                doctorId:
                  type: string
                  required: true
                patientId:
                  type: string
                  required: true
                appointmentTime:
                  type: string
                  required: true
                appointmentDuration:
                  type: string
                questionaryAnswer:
                  type: string
                  required: true
                status:
                  type: string
                
      
      responses:
        '200':
          description: details of booked appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      appointment:
                        type: object
                        properties:
                          id:
                            type: string
                          location_id:
                            type: string
                          department_id:
                            type: string
                          doctor_id:
                            type: string
                          patient_id:
                            type: string
                          appointment_time:
                            type: string
                          appointment_duration:
                            type: string
                          questionary_answers:
                            type: string
                          status:
                            type: string
                          prescription_image_url:
                            type: string
                          updatedAt:
                            type: string
                          createdAt:
                            type: string
                  
        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server
                    
        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 
    
    get:
      tags:
        - Appointment
      summary: Allows listing of booked appointments by a patient
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
              
      responses:
        '200':
          description: List of booked appointments
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      appointment:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            appointment_time:
                              type: string
                            appointment_duration:
                              type: string
                            questionary_answers:
                              type: string
                            status:
                              type: string
                            prescription_image_url:
                              type: string
                            location:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                                description:
                                  type: string
                                lan:
                                  type: number
                                lon:
                                  type: number
                                address:
                                  type: string
                                pincode:
                                  type: string
                                city:
                                  type: string
                                createdAt:
                                  type: string
                                updatedAt:
                                  type: string
                            department:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                                description:
                                  type: string
                                createdAt:
                                  type: string
                                updatedAt:
                                  type: string
                            doctor:
                              type: object
                              properties:
                                id:
                                  type: string
                                first_name:
                                  type: string
                                last_name:
                                  type: string
                                email:
                                  type: string
                                phone_number:
                                  type: string
                                address:
                                  type: string
                                pincode:
                                  type: string
                                education:
                                  type: string
                                about:
                                  type: string
                                doctor_speciality:
                                  type: string
                                licence_no:
                                  type: string
                                experience:
                                  type: number
                                createdAt:
                                  type: string
                                updatedAt:
                                  type: string
                            patient:
                              type: object
                              properties:
                                id:
                                  type: string
                                fist_name:
                                  type: string
                                last_name:
                                  type: string
                                email:
                                  type: string
                                phone_number:
                                  type: string
                                gender:
                                  type: string
                                date_of_birth:
                                  type: string
                                last_login:
                                  type: string
                  
        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server
                    
        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 
    
  # appointment update
  /appointment/{appointmentId}:
    put:
      tags:
        - Appointment
      summary: Allows to update the booked appointment
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      requestBody:
        description: Takes below properties
        content:
          application/json:
            schema:
              type: object
              properties:
                locationId:
                  type: string
                departmentId:
                  type: string
                doctorId:
                  type: string
                appointmentTime:
                  type: string
                appointmentDuration:
                  type: number
                questionaryAnswer:
                  type: string
                status:
                  type: string
                
      
      responses:
        '200':
          description: details of updated appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  data:
                    type: object
                    properties:
                      updatedAppointment:
                        type: object
                        properties:
                          id:
                            type: string
                          location_id:
                            type: string
                          department_id:
                            type: string
                          doctor_id:
                            type: string
                          patient_id:
                            type: string
                          appointment_time:
                            type: string
                          appointment_duration:
                            type: string
                          questionary_answers:
                            type: string
                          status:
                            type: string
                          prescription_image_url:
                            type: string
                          updatedAt:
                            type: string
                          createdAt:
                            type: string
                  
        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server
                    
        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError' 

    delete:
      tags:
        - Appointment
      summary: Allows to delete the booked appointment
      security:
        - basicAuth: []
      parameters:
        - in: header
          name: Authorization
          description: pass the access token
          required: true
      
      responses:
        '200':
          description: details of deleted appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message from the server
                  
        '400':
          description: JSON payload validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: A error message from server
                    
        '401':
          $ref: '#/components/responses/Unauhtorized'

        '500':
          $ref: '#/components/responses/UnknownServerError'